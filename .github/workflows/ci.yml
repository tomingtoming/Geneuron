name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - run: cargo test --all-features

  build:
    name: Build
    needs: test
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: geneuron
            asset_name: geneuron-linux-amd64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: geneuron.exe
            asset_name: geneuron-windows-amd64.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: geneuron
            asset_name: geneuron-macos-amd64
          - os: ubuntu-latest
            target: wasm32-unknown-unknown
            artifact_name: geneuron.wasm
            asset_name: geneuron-web.wasm

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install Linux Dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libasound2-dev libudev-dev pkg-config

      - name: Build Binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Prepare Web Assets
        if: matrix.target == 'wasm32-unknown-unknown'
        run: |
          mkdir -p dist
          cp index.html dist/
          cp target/wasm32-unknown-unknown/release/geneuron.wasm dist/

      - name: Upload Binary
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.asset_name }}
          path: |
            target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
            dist/*
          if-no-files-found: error

  create-release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v3

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            geneuron-linux-amd64/geneuron
            geneuron-windows-amd64.exe/geneuron.exe
            geneuron-macos-amd64/geneuron
            geneuron-web.wasm/dist/*